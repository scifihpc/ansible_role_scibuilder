---
# tasks file for ansible_role_scibuilder


- name: Ensure a unix-group for scibuilder exists
  ansible.builtin.group:
    name: "{{ scibuilder_user_name }}"
    gid:  "{{ scibuilder_user_gid  }}"
    state: present


- name: Create user account for scibuilder
  ansible.builtin.user:
    name:  "{{ scibuilder_user_name }}"
    uid:   "{{ scibuilder_user_uid  }}"
    group: "{{ scibuilder_user_name }}"


- name: Enable lingering
  ansible.builtin.command: "loginctl enable-linger {{ scibuilder_user_uid }}"
  args:
    creates: '/var/lib/systemd/linger/{{ scibuilder_user_name }}'


- name: Generate subuids and subgids
  ansible.builtin.include_role:
    name: ansible-role-subuid_subgid
    tasks_from: "main"
  vars: 
    subid_users: 
    - "{{scibuilder_user_name}}"
    subuid_bitshift: 8 
    subgid_bitshift: 8 #"{{subgid_bits}}"
  # remember that tag limitations will affect also the included roles. 


- name: Create the local folder for scibuilder
  ansible.builtin.file:
    path: "{{ scibuilder_local_folder}}"
    state: directory
    owner: "{{ scibuilder_user_name }}"
    group: "{{ scibuilder_user_name }}"


- name: Create buildcache folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ scibuilder_user_name }}"
    group: "{{ scibuilder_user_name }}"
  with_items: scibuilder_buildcache_folders


- name: Install podman
  ansible.builtin.dnf:
    name: ["podman", "podman-docker","container-selinux"]
    state: present


- name: Create /etc/containers/nodocker to silence podman
  ansible.builtin.file:
    path: /etc/containers/nodocker
    state: touch


- name: Start user podman socket
  ansible.builtin.systemd:
     name: podman.socket
     state: started
     scope: user
  environment:
     XDG_RUNTIME_DIR: "/run/user/{{ scibuilder_user_uid }}"
     DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ scibuilder_user_uid }}/bus"
  become: yes
  become_user: "{{scibuilder_user_name}}"
  tags: ["socket"]


# The action tries to mount /var/run/docker.sock inside the container, but this is not available in
# rootless podman
# https://github.com/actions/actions-runner-controller/issues/2548
# https://github.com/actions/runner/pull/1754
# https://github.com/containers/podman/issues/18480
- name: Replace /var/run/docker.sock with /run/user/UID/podman/podman.sock
  ansible.builtin.file:
    path: "/var/run/docker.sock"
    src: "/run/user/{{scibuilder_user_uid}}/podman/podman.sock"
    state: link
    force: yes
  tags: [socket]


- name: Create folder for runner
  ansible.builtin.file:
    path: "{{ scibuilder_local_folder}}/runners/{{ item }}"
    state: directory
    group: "{{scibuilder_user_name}}"
    owner: "{{scibuilder_user_name}}"
  loop: "{{ github_runner_name }}"


# https://docs.github.com/en/actions/hosting-your-own-runners/adding-self-hosted-runners
- name: Download & Unarchive runner package
  ansible.builtin.unarchive:
    src:  "{{ github_runner_url }}{{github_runner_filename}}"
    dest: "{{ scibuilder_local_folder}}/runners/{{ item }}"
    remote_src: yes
    group: "{{scibuilder_user_name}}"
    owner: "{{scibuilder_user_name}}"
  loop: "{{ github_runner_name }}"


- name: Install sudo to work as a different user
  ansible.builtin.dnf:
    name: ["sudo"]
    state: present


- name: Install runner dependencies
  ansible.builtin.dnf:
    name: ["libicu"]
    state: latest


- name: Configure the runner
  ansible.builtin.command:
    cmd: "./config.sh --url https://github.com/{{github_runner_org}}/{{ github_runner_repo }} --token {{ github_runner_token }} --unattended --name {{ item }} --replace"
    chdir:  "{{ scibuilder_local_folder}}/runners/{{ item }}"
    creates: "{{ scibuilder_local_folder}}/runners/{{ item }}/svc.sh"
  become: yes
  become_user: "{{scibuilder_user_name}}"
  loop: "{{ github_runner_name }}"


# https://docs.github.com/en/actions/hosting-your-own-runners/configuring-the-self-hosted-runner-application-as-a-service
- name: Install runner as a service
  ansible.builtin.command:
    cmd: "./svc.sh install {{ scibuilder_user_name }}"
    chdir:  "{{ scibuilder_local_folder}}/runners/{{ item }}"
    creates: "/etc/systemd/system/actions.runner.{{github_runner_org}}-{{github_runner_repo}}.{{ item }}.service"
  loop: "{{ github_runner_name }}"


- name: Start the service
  ansible.builtin.systemd:
    state: started
    name: "actions.runner.{{github_runner_org}}-{{github_runner_repo}}.{{ item }}.service"
  tags: ["start_runner"]
  loop: "{{ github_runner_name }}"
